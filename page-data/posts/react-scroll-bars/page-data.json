{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/react-scroll-bars/","webpackCompilationHash":"a6b40d165d176988182f","result":{"data":{"site":{"siteMetadata":{"title":"bloggo by hjf","subtitle":"TypeScript open sourcerer with an adoration for performant and terse code","copyright":"(copyleft) no rights reserved.","author":{"name":"Harry Fitzgerald"},"url":"https://www.hjf.io"}},"markdownRemark":{"id":"748b122c-34b1-57db-b711-e2a618b2a43a","html":"<p>Progress bars make a blog look cooler. More importantly, it lets the reader know that they’re almost finished with the article, which if good, if you’re overstimulated.</p>\n<p>They’re easy to add, I’ve added one to <a href=\"https://github.com/alxshelepenok/gatsby-starter-lumen\">lumen</a>, the template that this blog is based on. </p>\n<p>First, add the code to make it work. You’re probably looking for this -</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Page</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>progress<span class=\"token punctuation\">:</span> <span class=\"token string\">'0%'</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setScroll <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setScroll<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setScroll<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setScroll<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">setScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> winScroll <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop\n    <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">-</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight\n    <span class=\"token keyword\">const</span> scrolled <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>winScroll <span class=\"token operator\">/</span> height<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">const</span> scrollPerc <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>scrolled<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%`</span></span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> scrollPerc <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here, we set an initial state - scrolled 0%. We also add an event listener to update the state on scroll. The magic happens within <code class=\"language-text\">setScroll()</code> — we calculate the scroll position and the height of the window. Height it calculated as <code class=\"language-text\">scrollHeight - clientHeight</code> so that the bar starts at 0, and when we hit the bottom of the page, the bar hits 100%.</p>\n<p>Then, we sprinkle in a bit of JSX -</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"post-progress\"</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>width<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>scrollPerc<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>And a bit of styling to boot -</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.post-progress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> $color-primary<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>By updating state on each scroll, the component re-renders and <code class=\"language-text\">div.post-progress</code> gets wider (or thinner) based on the scroll, looking like a scrollbar. </p>\n<p>The code examples are used ad verbatim in this blog - give them a go!</p>\n<hr>\n<h2><a name=\"hooks\"></a>Update (20-Sep-2019): Migrated to Hooks</h2>\n<p>Since migrating the site to <a href=\"/me/migrating-to-hooks/\">hooks</a>, The code for this is <strong>significantly</strong> cleaner.</p>\n<p>The component is done with a functional component, with a custom <code class=\"language-text\">useScroll</code> hook. It looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">useScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>scrollPerc<span class=\"token punctuation\">,</span> setScrollPerc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token function\">getScrollPerc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setScrollPerc</span><span class=\"token punctuation\">(</span><span class=\"token function\">getScrollPerc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\twindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> setScroll<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> setScroll<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> scrollPerc\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The original <code class=\"language-text\">getScrollPerc()</code> from before is used. It’s used by <code class=\"language-text\">setScroll</code>, a higher-order function. This means that an event listener can be added and removed.</p>\n<p><code class=\"language-text\">useEffect</code> is used to set an event listener that updates the state and by returning <code class=\"language-text\">window.removeEventListener(......)</code>, the component can cleanup on unmount.</p>","fields":{"tagSlugs":["/tags/react/","/tags/web-development/","/tags/tips/"],"slug":"/posts/react-scroll-bars/"},"frontmatter":{"title":"React Progress Bars","tags":["React","Web Development","Tips"],"date":"2019-09-13T18:57:00.000Z","description":"How to implement a functional progress bar in any React/Preact website - like this one here!"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/react-scroll-bars/"}}}