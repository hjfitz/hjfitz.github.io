{"version":3,"sources":["webpack:///./src/components/PostTemplateDetails/index.jsx","webpack:///./src/templates/post-template.jsx"],"names":["useScroll","useState","scrollPerc","setScrollPerc","setScroll","document","body","scrollTop","documentElement","scrollHeight","clientHeight","useEffect","window","addEventListener","removeEventListener","PostTemplateDetails","props","post","data","markdownRemark","tags","fields","tagSlugs","homeBlock","className","to","tagsBlock","map","tag","i","key","frontmatter","style","width","title","dangerouslySetInnerHTML","__html","html","format","Date","date","PostTemplate","site","siteMetadata","subtitle","postTitle","description","Layout","name","content","pageQuery"],"mappings":"uKAYA,SAASA,IAAa,IAAD,EACgBC,mBAAS,MAAtCC,EADa,KACDC,EADC,KAEdC,EAAY,kBAAMD,GARNE,SAASC,KAAKC,WAAaF,SAASG,gBAAgBD,YACvDF,SAASG,gBAAgBC,aAAeJ,SAASG,gBAAgBE,cACxC,IACxC,MAWA,OALAC,qBAAU,WAGT,OAFAP,IACAQ,OAAOC,iBAAiB,SAAUT,GAC3B,kBAAMQ,OAAOE,oBAAoB,SAAUV,OAE5CF,EA0DOa,MAvDf,SAA6BC,GAC5B,IAAMd,EAAaF,IACbiB,EAAOD,EAAME,KAAKC,eAClBC,EAAOH,EAAKI,OAAOC,SAEnBC,EACL,6BACC,kBAAC,OAAD,CAAMC,UAAU,2BAA2BC,GAAG,KAA9C,cAMIC,EACL,yBAAKF,UAAU,qBACd,wBAAIA,UAAU,0BACZJ,GACAA,EAAKO,KAAI,SAACC,EAAKC,GAAN,OACR,wBAAIL,UAAU,8BAA8BM,IAAKF,GAChD,kBAAC,OAAD,CAAMH,GAAIG,EAAKJ,UAAU,oCACvBP,EAAKc,YAAYX,KAAKS,UAQ9B,OACC,6BACC,yBAAKL,UAAU,gBAAgBQ,MAAO,CAACC,MAAO/B,KAC7CqB,EACD,yBAAKC,UAAU,eACd,yBAAKA,UAAU,sBACd,wBAAIA,UAAU,sBAAsBP,EAAKc,YAAYG,OACrD,yBACCV,UAAU,oBAEVW,wBAAyB,CAACC,OAAQnB,EAAKoB,QAExC,yBAAKb,UAAU,qBACd,yCACYc,YAAO,IAAIC,KAAKtB,EAAKc,YAAYS,MAAO,kBAItD,yBAAKhB,UAAU,uBACbE,EACD,iCCvEL,0CA0Bee,UApBf,SAAsBzB,GAAQ,IAAD,EACFA,EAAME,KAAKwB,KAAKC,aAAnCT,EADqB,EACrBA,MAAOU,EADc,EACdA,SADc,EAEf5B,EAAME,KAAKC,eACsCY,YAAhDc,EAHc,EAGrBX,MACDY,EAJsB,EAGHA,aACcF,EAEvC,OACC,kBAACG,EAAA,EAAD,KACC,6BACC,kBAAC,IAAD,KACC,+BAAWF,EAAX,MAA0BX,GAC1B,0BAAMc,KAAK,cAAcC,QAASH,KAEnC,kBAAC,EAAwB9B,MAOdyB,IAEFS,EAAS","file":"component---src-templates-post-template-jsx-497d9532ea53bcf322c6.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Link} from 'gatsby'\nimport format from 'date-fns/format'\nimport './style.scss'\n\nfunction getScrollPerc() {\n\tconst winScroll = document.body.scrollTop || document.documentElement.scrollTop\n\tconst height = document.documentElement.scrollHeight - document.documentElement.clientHeight\n\tconst scrolled = (winScroll / height) * 100\n\treturn `${scrolled}%`\n}\n\nfunction useScroll() {\n\tconst [scrollPerc, setScrollPerc] = useState('0%')\n\tconst setScroll = () => setScrollPerc(getScrollPerc())\n\tuseEffect(() => {\n\t\tsetScroll()\n\t\twindow.addEventListener('scroll', setScroll)\n\t\treturn () => window.removeEventListener('scroll', setScroll)\n\t})\n\treturn scrollPerc\n}\n\nfunction PostTemplateDetails(props) {\n\tconst scrollPerc = useScroll()\n\tconst post = props.data.markdownRemark\n\tconst tags = post.fields.tagSlugs\n\n\tconst homeBlock = (\n\t\t<div>\n\t\t\t<Link className=\"post-single__home-button\" to=\"/\">\n\t\t\t\tBack home\n\t\t\t</Link>\n\t\t</div>\n\t)\n\n\tconst tagsBlock = (\n\t\t<div className=\"post-single__tags\">\n\t\t\t<ul className=\"post-single__tags-list\">\n\t\t\t\t{tags &&\n\t\t\t\t\ttags.map((tag, i) => (\n\t\t\t\t\t\t<li className=\"post-single__tags-list-item\" key={tag}>\n\t\t\t\t\t\t\t<Link to={tag} className=\"post-single__tags-list-item-link\">\n\t\t\t\t\t\t\t\t{post.frontmatter.tags[i]}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"post-progress\" style={{width: scrollPerc}} />\n\t\t\t{homeBlock}\n\t\t\t<div className=\"post-single\">\n\t\t\t\t<div className=\"post-single__inner\">\n\t\t\t\t\t<h1 className=\"post-single__title\">{post.frontmatter.title}</h1>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"post-single__body\"\n\t\t\t\t\t\t/* eslint-disable-next-line react/no-danger */\n\t\t\t\t\t\tdangerouslySetInnerHTML={{__html: post.html}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"post-single__date\">\n\t\t\t\t\t\t<em>\n\t\t\t\t\t\t\tPublished {format(new Date(post.frontmatter.date), 'do MMM yyyy')}\n\t\t\t\t\t\t</em>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"post-single__footer\">\n\t\t\t\t\t{tagsBlock}\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default PostTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport {graphql} from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostTemplateDetails from '../components/PostTemplateDetails'\n\nfunction PostTemplate(props) {\n\tconst {title, subtitle} = props.data.site.siteMetadata\n\tconst post = props.data.markdownRemark\n\tconst {title: postTitle, description: postDescription} = post.frontmatter\n\tconst description = postDescription || subtitle\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>{`${postTitle} - ${title}`}</title>\n\t\t\t\t\t<meta name=\"description\" content={description} />\n\t\t\t\t</Helmet>\n\t\t\t\t<PostTemplateDetails {...props} />\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\n\nexport default PostTemplate\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n        }\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        tagSlugs\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        date\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}